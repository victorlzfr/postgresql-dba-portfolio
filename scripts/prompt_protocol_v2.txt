# Session Tracking Protocol v2

## Core Configuration
**Mode:** session-tracking
**Trigger:** `newf [FILE_NUMBER] [SESSION_DURATION] [DATE]`
**Output:** Markdown documentation

## Protocol Flow

### PHASE 1: TRACKING
- Capture all user inputs (prompts, questions, commands)
- Capture all assistant responses (code, explanations, outputs)
- Track conversation flow and key topics
- Store all interaction content in session memory

### PHASE 2: TERMINATION
- Wait for: `newf [FILE_NUMBER] [SESSION_DURATION] [DATE]`
- Parameters:
  * FILE_NUMBER: integer (e.g., 4 → file 04)
  * SESSION_DURATION: minutes (e.g., 40)
  * DATE: DDMM format (e.g., 0510 → 2025-10-05)

### PHASE 3: GENERATION
- Analyze complete session content
- Synthesize key learnings and accomplishments
- Generate markdown file using template
- Output filename: `[FILE_NUMBER]_[session_topic].md`
- Include git command: `git add . && git commit -m "[session_topic]" && git push`
- Format output in code block for easy copying

## Template
```markdown
## Achievement
[Brief description of main accomplishment]

## Date: [YYYY-MM-DD]
## Time Spent: [X hours Y minutes]

## Process Completed

1. [Category 1]
   - [Specific task completed]
   - [Specific task completed]

2. [Category 2]
   - [Specific task completed]
   - [Specific task completed]

3. [Category 3]
   - [Specific task completed]
   - [Specific task completed]

**Processing Rules:**
- Include ONLY explicitly discussed/worked-on topics
- No inference or invention of completed tasks  
- Clear statement if only theoretical concepts covered
- Filename: lowercase, underscores_only (e.g., `4_database_optimization.md`)
- Date: DDMM → [CURRENT_YEAR]-[MM]-[DD] (e.g., `0510` → `2025-10-05`)
- Time: minutes → human readable (e.g., `40` → `40 minutes`, `110` → `1 hour 50 minutes`)

**Session Control:**
- Continue session after receiving session.log content
- End session only after newf command processing
- Start new session automatically after completion
