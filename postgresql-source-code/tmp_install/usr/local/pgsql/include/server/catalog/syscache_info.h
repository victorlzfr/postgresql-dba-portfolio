/*-------------------------------------------------------------------------
 *
 * syscache_info.h
 *    SysCache definitions
 *
 * Portions Copyright (c) 1996-2025, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 * NOTES
 *  ******************************
 *  *** DO NOT EDIT THIS FILE! ***
 *  ******************************
 *
 *  It has been GENERATED by src/backend/catalog/genbki.pl
 *
 *-------------------------------------------------------------------------
 */

#include "catalog/pg_aggregate_d.h"
#include "catalog/pg_am_d.h"
#include "catalog/pg_amop_d.h"
#include "catalog/pg_amproc_d.h"
#include "catalog/pg_attribute_d.h"
#include "catalog/pg_auth_members_d.h"
#include "catalog/pg_authid_d.h"
#include "catalog/pg_cast_d.h"
#include "catalog/pg_class_d.h"
#include "catalog/pg_collation_d.h"
#include "catalog/pg_constraint_d.h"
#include "catalog/pg_conversion_d.h"
#include "catalog/pg_database_d.h"
#include "catalog/pg_default_acl_d.h"
#include "catalog/pg_enum_d.h"
#include "catalog/pg_event_trigger_d.h"
#include "catalog/pg_extension_d.h"
#include "catalog/pg_foreign_data_wrapper_d.h"
#include "catalog/pg_foreign_server_d.h"
#include "catalog/pg_foreign_table_d.h"
#include "catalog/pg_index_d.h"
#include "catalog/pg_language_d.h"
#include "catalog/pg_namespace_d.h"
#include "catalog/pg_opclass_d.h"
#include "catalog/pg_operator_d.h"
#include "catalog/pg_opfamily_d.h"
#include "catalog/pg_parameter_acl_d.h"
#include "catalog/pg_partitioned_table_d.h"
#include "catalog/pg_proc_d.h"
#include "catalog/pg_publication_d.h"
#include "catalog/pg_publication_namespace_d.h"
#include "catalog/pg_publication_rel_d.h"
#include "catalog/pg_range_d.h"
#include "catalog/pg_replication_origin_d.h"
#include "catalog/pg_rewrite_d.h"
#include "catalog/pg_sequence_d.h"
#include "catalog/pg_statistic_d.h"
#include "catalog/pg_statistic_ext_d.h"
#include "catalog/pg_statistic_ext_data_d.h"
#include "catalog/pg_subscription_d.h"
#include "catalog/pg_subscription_rel_d.h"
#include "catalog/pg_tablespace_d.h"
#include "catalog/pg_transform_d.h"
#include "catalog/pg_ts_config_d.h"
#include "catalog/pg_ts_config_map_d.h"
#include "catalog/pg_ts_dict_d.h"
#include "catalog/pg_ts_parser_d.h"
#include "catalog/pg_ts_template_d.h"
#include "catalog/pg_type_d.h"
#include "catalog/pg_user_mapping_d.h"

static const struct cachedesc cacheinfo[] = {
	[AGGFNOID] = {
		AggregateRelationId,
		AggregateFnoidIndexId,
		KEY(Anum_pg_aggregate_aggfnoid),
		16
	},
	[AMNAME] = {
		AccessMethodRelationId,
		AmNameIndexId,
		KEY(Anum_pg_am_amname),
		4
	},
	[AMOID] = {
		AccessMethodRelationId,
		AmOidIndexId,
		KEY(Anum_pg_am_oid),
		4
	},
	[AMOPOPID] = {
		AccessMethodOperatorRelationId,
		AccessMethodOperatorIndexId,
		KEY(Anum_pg_amop_amopopr, Anum_pg_amop_amoppurpose, Anum_pg_amop_amopfamily),
		64
	},
	[AMOPSTRATEGY] = {
		AccessMethodOperatorRelationId,
		AccessMethodStrategyIndexId,
		KEY(Anum_pg_amop_amopfamily, Anum_pg_amop_amoplefttype, Anum_pg_amop_amoprighttype, Anum_pg_amop_amopstrategy),
		64
	},
	[AMPROCNUM] = {
		AccessMethodProcedureRelationId,
		AccessMethodProcedureIndexId,
		KEY(Anum_pg_amproc_amprocfamily, Anum_pg_amproc_amproclefttype, Anum_pg_amproc_amprocrighttype, Anum_pg_amproc_amprocnum),
		16
	},
	[ATTNAME] = {
		AttributeRelationId,
		AttributeRelidNameIndexId,
		KEY(Anum_pg_attribute_attrelid, Anum_pg_attribute_attname),
		32
	},
	[ATTNUM] = {
		AttributeRelationId,
		AttributeRelidNumIndexId,
		KEY(Anum_pg_attribute_attrelid, Anum_pg_attribute_attnum),
		128
	},
	[AUTHMEMMEMROLE] = {
		AuthMemRelationId,
		AuthMemMemRoleIndexId,
		KEY(Anum_pg_auth_members_member, Anum_pg_auth_members_roleid, Anum_pg_auth_members_grantor),
		8
	},
	[AUTHMEMROLEMEM] = {
		AuthMemRelationId,
		AuthMemRoleMemIndexId,
		KEY(Anum_pg_auth_members_roleid, Anum_pg_auth_members_member, Anum_pg_auth_members_grantor),
		8
	},
	[AUTHNAME] = {
		AuthIdRelationId,
		AuthIdRolnameIndexId,
		KEY(Anum_pg_authid_rolname),
		8
	},
	[AUTHOID] = {
		AuthIdRelationId,
		AuthIdOidIndexId,
		KEY(Anum_pg_authid_oid),
		8
	},
	[CASTSOURCETARGET] = {
		CastRelationId,
		CastSourceTargetIndexId,
		KEY(Anum_pg_cast_castsource, Anum_pg_cast_casttarget),
		256
	},
	[CLAAMNAMENSP] = {
		OperatorClassRelationId,
		OpclassAmNameNspIndexId,
		KEY(Anum_pg_opclass_opcmethod, Anum_pg_opclass_opcname, Anum_pg_opclass_opcnamespace),
		8
	},
	[CLAOID] = {
		OperatorClassRelationId,
		OpclassOidIndexId,
		KEY(Anum_pg_opclass_oid),
		8
	},
	[COLLNAMEENCNSP] = {
		CollationRelationId,
		CollationNameEncNspIndexId,
		KEY(Anum_pg_collation_collname, Anum_pg_collation_collencoding, Anum_pg_collation_collnamespace),
		8
	},
	[COLLOID] = {
		CollationRelationId,
		CollationOidIndexId,
		KEY(Anum_pg_collation_oid),
		8
	},
	[CONDEFAULT] = {
		ConversionRelationId,
		ConversionDefaultIndexId,
		KEY(Anum_pg_conversion_connamespace, Anum_pg_conversion_conforencoding, Anum_pg_conversion_contoencoding, Anum_pg_conversion_oid),
		8
	},
	[CONNAMENSP] = {
		ConversionRelationId,
		ConversionNameNspIndexId,
		KEY(Anum_pg_conversion_conname, Anum_pg_conversion_connamespace),
		8
	},
	[CONSTROID] = {
		ConstraintRelationId,
		ConstraintOidIndexId,
		KEY(Anum_pg_constraint_oid),
		16
	},
	[CONVOID] = {
		ConversionRelationId,
		ConversionOidIndexId,
		KEY(Anum_pg_conversion_oid),
		8
	},
	[DATABASEOID] = {
		DatabaseRelationId,
		DatabaseOidIndexId,
		KEY(Anum_pg_database_oid),
		4
	},
	[DEFACLROLENSPOBJ] = {
		DefaultAclRelationId,
		DefaultAclRoleNspObjIndexId,
		KEY(Anum_pg_default_acl_defaclrole, Anum_pg_default_acl_defaclnamespace, Anum_pg_default_acl_defaclobjtype),
		8
	},
	[ENUMOID] = {
		EnumRelationId,
		EnumOidIndexId,
		KEY(Anum_pg_enum_oid),
		8
	},
	[ENUMTYPOIDNAME] = {
		EnumRelationId,
		EnumTypIdLabelIndexId,
		KEY(Anum_pg_enum_enumtypid, Anum_pg_enum_enumlabel),
		8
	},
	[EVENTTRIGGERNAME] = {
		EventTriggerRelationId,
		EventTriggerNameIndexId,
		KEY(Anum_pg_event_trigger_evtname),
		8
	},
	[EVENTTRIGGEROID] = {
		EventTriggerRelationId,
		EventTriggerOidIndexId,
		KEY(Anum_pg_event_trigger_oid),
		8
	},
	[EXTENSIONNAME] = {
		ExtensionRelationId,
		ExtensionNameIndexId,
		KEY(Anum_pg_extension_extname),
		2
	},
	[EXTENSIONOID] = {
		ExtensionRelationId,
		ExtensionOidIndexId,
		KEY(Anum_pg_extension_oid),
		2
	},
	[FOREIGNDATAWRAPPERNAME] = {
		ForeignDataWrapperRelationId,
		ForeignDataWrapperNameIndexId,
		KEY(Anum_pg_foreign_data_wrapper_fdwname),
		2
	},
	[FOREIGNDATAWRAPPEROID] = {
		ForeignDataWrapperRelationId,
		ForeignDataWrapperOidIndexId,
		KEY(Anum_pg_foreign_data_wrapper_oid),
		2
	},
	[FOREIGNSERVERNAME] = {
		ForeignServerRelationId,
		ForeignServerNameIndexId,
		KEY(Anum_pg_foreign_server_srvname),
		2
	},
	[FOREIGNSERVEROID] = {
		ForeignServerRelationId,
		ForeignServerOidIndexId,
		KEY(Anum_pg_foreign_server_oid),
		2
	},
	[FOREIGNTABLEREL] = {
		ForeignTableRelationId,
		ForeignTableRelidIndexId,
		KEY(Anum_pg_foreign_table_ftrelid),
		4
	},
	[INDEXRELID] = {
		IndexRelationId,
		IndexRelidIndexId,
		KEY(Anum_pg_index_indexrelid),
		64
	},
	[LANGNAME] = {
		LanguageRelationId,
		LanguageNameIndexId,
		KEY(Anum_pg_language_lanname),
		4
	},
	[LANGOID] = {
		LanguageRelationId,
		LanguageOidIndexId,
		KEY(Anum_pg_language_oid),
		4
	},
	[NAMESPACENAME] = {
		NamespaceRelationId,
		NamespaceNameIndexId,
		KEY(Anum_pg_namespace_nspname),
		4
	},
	[NAMESPACEOID] = {
		NamespaceRelationId,
		NamespaceOidIndexId,
		KEY(Anum_pg_namespace_oid),
		16
	},
	[OPERNAMENSP] = {
		OperatorRelationId,
		OperatorNameNspIndexId,
		KEY(Anum_pg_operator_oprname, Anum_pg_operator_oprleft, Anum_pg_operator_oprright, Anum_pg_operator_oprnamespace),
		256
	},
	[OPEROID] = {
		OperatorRelationId,
		OperatorOidIndexId,
		KEY(Anum_pg_operator_oid),
		32
	},
	[OPFAMILYAMNAMENSP] = {
		OperatorFamilyRelationId,
		OpfamilyAmNameNspIndexId,
		KEY(Anum_pg_opfamily_opfmethod, Anum_pg_opfamily_opfname, Anum_pg_opfamily_opfnamespace),
		8
	},
	[OPFAMILYOID] = {
		OperatorFamilyRelationId,
		OpfamilyOidIndexId,
		KEY(Anum_pg_opfamily_oid),
		8
	},
	[PARAMETERACLNAME] = {
		ParameterAclRelationId,
		ParameterAclParnameIndexId,
		KEY(Anum_pg_parameter_acl_parname),
		4
	},
	[PARAMETERACLOID] = {
		ParameterAclRelationId,
		ParameterAclOidIndexId,
		KEY(Anum_pg_parameter_acl_oid),
		4
	},
	[PARTRELID] = {
		PartitionedRelationId,
		PartitionedRelidIndexId,
		KEY(Anum_pg_partitioned_table_partrelid),
		32
	},
	[PROCNAMEARGSNSP] = {
		ProcedureRelationId,
		ProcedureNameArgsNspIndexId,
		KEY(Anum_pg_proc_proname, Anum_pg_proc_proargtypes, Anum_pg_proc_pronamespace),
		128
	},
	[PROCOID] = {
		ProcedureRelationId,
		ProcedureOidIndexId,
		KEY(Anum_pg_proc_oid),
		128
	},
	[PUBLICATIONNAME] = {
		PublicationRelationId,
		PublicationNameIndexId,
		KEY(Anum_pg_publication_pubname),
		8
	},
	[PUBLICATIONNAMESPACE] = {
		PublicationNamespaceRelationId,
		PublicationNamespaceObjectIndexId,
		KEY(Anum_pg_publication_namespace_oid),
		64
	},
	[PUBLICATIONNAMESPACEMAP] = {
		PublicationNamespaceRelationId,
		PublicationNamespacePnnspidPnpubidIndexId,
		KEY(Anum_pg_publication_namespace_pnnspid, Anum_pg_publication_namespace_pnpubid),
		64
	},
	[PUBLICATIONOID] = {
		PublicationRelationId,
		PublicationObjectIndexId,
		KEY(Anum_pg_publication_oid),
		8
	},
	[PUBLICATIONREL] = {
		PublicationRelRelationId,
		PublicationRelObjectIndexId,
		KEY(Anum_pg_publication_rel_oid),
		64
	},
	[PUBLICATIONRELMAP] = {
		PublicationRelRelationId,
		PublicationRelPrrelidPrpubidIndexId,
		KEY(Anum_pg_publication_rel_prrelid, Anum_pg_publication_rel_prpubid),
		64
	},
	[RANGEMULTIRANGE] = {
		RangeRelationId,
		RangeMultirangeTypidIndexId,
		KEY(Anum_pg_range_rngmultitypid),
		4
	},
	[RANGETYPE] = {
		RangeRelationId,
		RangeTypidIndexId,
		KEY(Anum_pg_range_rngtypid),
		4
	},
	[RELNAMENSP] = {
		RelationRelationId,
		ClassNameNspIndexId,
		KEY(Anum_pg_class_relname, Anum_pg_class_relnamespace),
		128
	},
	[RELOID] = {
		RelationRelationId,
		ClassOidIndexId,
		KEY(Anum_pg_class_oid),
		128
	},
	[REPLORIGIDENT] = {
		ReplicationOriginRelationId,
		ReplicationOriginIdentIndex,
		KEY(Anum_pg_replication_origin_roident),
		16
	},
	[REPLORIGNAME] = {
		ReplicationOriginRelationId,
		ReplicationOriginNameIndex,
		KEY(Anum_pg_replication_origin_roname),
		16
	},
	[RULERELNAME] = {
		RewriteRelationId,
		RewriteRelRulenameIndexId,
		KEY(Anum_pg_rewrite_ev_class, Anum_pg_rewrite_rulename),
		8
	},
	[SEQRELID] = {
		SequenceRelationId,
		SequenceRelidIndexId,
		KEY(Anum_pg_sequence_seqrelid),
		32
	},
	[STATEXTDATASTXOID] = {
		StatisticExtDataRelationId,
		StatisticExtDataStxoidInhIndexId,
		KEY(Anum_pg_statistic_ext_data_stxoid, Anum_pg_statistic_ext_data_stxdinherit),
		4
	},
	[STATEXTNAMENSP] = {
		StatisticExtRelationId,
		StatisticExtNameIndexId,
		KEY(Anum_pg_statistic_ext_stxname, Anum_pg_statistic_ext_stxnamespace),
		4
	},
	[STATEXTOID] = {
		StatisticExtRelationId,
		StatisticExtOidIndexId,
		KEY(Anum_pg_statistic_ext_oid),
		4
	},
	[STATRELATTINH] = {
		StatisticRelationId,
		StatisticRelidAttnumInhIndexId,
		KEY(Anum_pg_statistic_starelid, Anum_pg_statistic_staattnum, Anum_pg_statistic_stainherit),
		128
	},
	[SUBSCRIPTIONNAME] = {
		SubscriptionRelationId,
		SubscriptionNameIndexId,
		KEY(Anum_pg_subscription_subdbid, Anum_pg_subscription_subname),
		4
	},
	[SUBSCRIPTIONOID] = {
		SubscriptionRelationId,
		SubscriptionObjectIndexId,
		KEY(Anum_pg_subscription_oid),
		4
	},
	[SUBSCRIPTIONRELMAP] = {
		SubscriptionRelRelationId,
		SubscriptionRelSrrelidSrsubidIndexId,
		KEY(Anum_pg_subscription_rel_srrelid, Anum_pg_subscription_rel_srsubid),
		64
	},
	[TABLESPACEOID] = {
		TableSpaceRelationId,
		TablespaceOidIndexId,
		KEY(Anum_pg_tablespace_oid),
		4
	},
	[TRFOID] = {
		TransformRelationId,
		TransformOidIndexId,
		KEY(Anum_pg_transform_oid),
		16
	},
	[TRFTYPELANG] = {
		TransformRelationId,
		TransformTypeLangIndexId,
		KEY(Anum_pg_transform_trftype, Anum_pg_transform_trflang),
		16
	},
	[TSCONFIGMAP] = {
		TSConfigMapRelationId,
		TSConfigMapIndexId,
		KEY(Anum_pg_ts_config_map_mapcfg, Anum_pg_ts_config_map_maptokentype, Anum_pg_ts_config_map_mapseqno),
		2
	},
	[TSCONFIGNAMENSP] = {
		TSConfigRelationId,
		TSConfigNameNspIndexId,
		KEY(Anum_pg_ts_config_cfgname, Anum_pg_ts_config_cfgnamespace),
		2
	},
	[TSCONFIGOID] = {
		TSConfigRelationId,
		TSConfigOidIndexId,
		KEY(Anum_pg_ts_config_oid),
		2
	},
	[TSDICTNAMENSP] = {
		TSDictionaryRelationId,
		TSDictionaryNameNspIndexId,
		KEY(Anum_pg_ts_dict_dictname, Anum_pg_ts_dict_dictnamespace),
		2
	},
	[TSDICTOID] = {
		TSDictionaryRelationId,
		TSDictionaryOidIndexId,
		KEY(Anum_pg_ts_dict_oid),
		2
	},
	[TSPARSERNAMENSP] = {
		TSParserRelationId,
		TSParserNameNspIndexId,
		KEY(Anum_pg_ts_parser_prsname, Anum_pg_ts_parser_prsnamespace),
		2
	},
	[TSPARSEROID] = {
		TSParserRelationId,
		TSParserOidIndexId,
		KEY(Anum_pg_ts_parser_oid),
		2
	},
	[TSTEMPLATENAMENSP] = {
		TSTemplateRelationId,
		TSTemplateNameNspIndexId,
		KEY(Anum_pg_ts_template_tmplname, Anum_pg_ts_template_tmplnamespace),
		2
	},
	[TSTEMPLATEOID] = {
		TSTemplateRelationId,
		TSTemplateOidIndexId,
		KEY(Anum_pg_ts_template_oid),
		2
	},
	[TYPENAMENSP] = {
		TypeRelationId,
		TypeNameNspIndexId,
		KEY(Anum_pg_type_typname, Anum_pg_type_typnamespace),
		64
	},
	[TYPEOID] = {
		TypeRelationId,
		TypeOidIndexId,
		KEY(Anum_pg_type_oid),
		64
	},
	[USERMAPPINGOID] = {
		UserMappingRelationId,
		UserMappingOidIndexId,
		KEY(Anum_pg_user_mapping_oid),
		2
	},
	[USERMAPPINGUSERSERVER] = {
		UserMappingRelationId,
		UserMappingUserServerIndexId,
		KEY(Anum_pg_user_mapping_umuser, Anum_pg_user_mapping_umserver),
		2
	},
};
